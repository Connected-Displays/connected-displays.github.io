<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Connected Displays</title>
    <link>http://www.connected-displays.com/post/</link>
    <description>Recent content in Posts on Connected Displays</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Feb 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.connected-displays.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>New Tutorial: Umbrella Reminder with Particle Photon Webhooks</title>
      <link>http://www.connected-displays.com/post/photon-rain-led-tutorial/</link>
      <pubDate>Thu, 04 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.connected-displays.com/post/photon-rain-led-tutorial/</guid>
      <description>&lt;p&gt;I live in NYC and the weather can change suddenly.  It may look nice outside my window when I&amp;rsquo;m getting ready to leave, but a storm could be inbound.  I&amp;rsquo;d like to have something that tells me to &amp;ldquo;bring your umbrella&amp;rdquo; right next to the door.&lt;/p&gt;

&lt;p&gt;This is my first project done with the &lt;a href=&#34;https://www.particle.io/prototype&#34;&gt;Particle Photon&lt;/a&gt;, and because I couldn&amp;rsquo;t find a comprehensive tutorial on this type of project, I wrote it up in tutorial form. The tutorial demonstrates polling for data from a third-party API using Webhooks, and requires no extra parts or assembly to get going.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.connected-displays.com/tutorial/photon-rain-led-tutorial/&#34;&gt;Continue to Tutorial &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ESP8266 Weather Display</title>
      <link>http://www.connected-displays.com/post/esp8266-weather-display/</link>
      <pubDate>Mon, 04 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.connected-displays.com/post/esp8266-weather-display/</guid>
      <description>

&lt;p&gt;I came across a tutorial in the Adafruit Learning System about a &lt;a href=&#34;https://learn.adafruit.com/huzzah-weather-display/&#34;&gt;WiFi-connected Weather Display&lt;/a&gt; that caught my eye.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;adafruit-weather-display.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The tutorial shows how to use Huzzah - Adafruit’s breakout for the ESP8266 WiFi module - to display weather data on an OLED screen.  The project is listed as an intermediate level project, because it requires a PHP script to be running on a separate computer or Raspberry Pi to translate data from a weather forecast API to a format the microcontroller can handle.&lt;/p&gt;

&lt;p&gt;When I looked into the details, I found the tutorial on Adafruit was based on &lt;a href=&#34;http://blog.squix.ch/2015/06/esp8266-weather-station-v2-code.html&#34;&gt;another project&lt;/a&gt; by Dani Eichhorn; I’ll talk about both projects here.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cNmsZvzq-Vg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;hardware:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Hardware&lt;/h2&gt;

&lt;p&gt;The core hardware of the project is simple: an ESP8266 breakout board, monochrome 1.3&amp;rdquo; 128x64 SSD1306 OLED display with I2C connection, some jumper wires and a connection to external power over USB.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://blog.squix.ch/2015/06/esp8266-weather-station-v2-code.html&#34;&gt;original project&lt;/a&gt; uses a NodeMCU board.  The board has not only an ESP8266 chip but also a microUSB jack and USB-Serial converter chip so you can program the chip directly over USB and power the project through USB.  The parts Dani used come with pins already soldered, ready to connect with jumper wires.  This makes for a much easier to assemble project, but there will be a mess of wires behind the OLED display that can&amp;rsquo;t be contained in a small enclosure.  The author is selling the parts you need for the project &lt;a href=&#34;http://blog.squix.ch/p/weatherstation-kit.html&#34;&gt;as a reasonably priced kit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Adafruit tutorial adds a few more parts - required as their Huzzah ESP8266 breakout doesn&amp;rsquo;t have a USB port for programming or power - and their tutorial requires soldering all the parts together.  On the plus side, the soldering leaves the assembled project in a more compact form.  The tutorial includes a design for a case to hold everything if you want to source the laser cut acrylic and fasteners yourself.&lt;/p&gt;

&lt;h2 id=&#34;software:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Software&lt;/h2&gt;

&lt;p&gt;The Arduino code is well written and easy to understand.  There are three screens that cycle between the current weather, current temperature, and tomorrows forecast, and are populated with a combination of text and an icon.  The icons are mono-color bitmaps converted to &lt;a href=&#34;https://en.wikipedia.org/wiki/X_BitMap&#34;&gt;XBM (X Bitmap) format&lt;/a&gt; which uses 1 bit per pixel, and is stored as an array for easily including with the source code.&lt;/p&gt;

&lt;p&gt;The display is driven over I2C with a custom OLED driver class that is specifically designed to scroll through several frames of information.  The class doesn’t do temporary storage of any frames, they are written to the display directly.  During frame transitions, the graphics for the previous and next frames are generated and written out to the display at each step in the transition animation.  This is a clever way to save memory while seamlessly transitioning between the frames.&lt;/p&gt;

&lt;p&gt;The PHP script is used to convert the weather data to a format that is easier to store and parse on the ESP8266.  When requested by an HTTP GET request from the microcontroller, the script requests a JSON object containing the weather from the &lt;a href=&#34;https://developer.forecast.io&#34;&gt;forecast.io&lt;/a&gt; API, then responds to the micocontroller with  just the necessary values as key-value pairs that are easy for the microcontroller to parse.&lt;/p&gt;

&lt;h2 id=&#34;what-s-unique-about-this-project:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;What’s unique about this project?&lt;/h2&gt;

&lt;p&gt;This isn&amp;rsquo;t the first ESP8266 weather display out there, but it&amp;rsquo;s the first I&amp;rsquo;ve seen that adds nice graphics to the display including transitions between frames, and does it all with the ESP8266 module, and not a separate Arduino or similar microcontroller.&lt;/p&gt;

&lt;p&gt;The Adafruit version builds on the original project with an enclosure and compact layout, and well documented tutorial that shows how to put everything together.&lt;/p&gt;

&lt;h2 id=&#34;suggestions-for-the-next-version:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Suggestions for the Next Version&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;d like to see animated weather icons, like the ones used by the &lt;a href=&#34;http://forecast.io/&#34;&gt;forecast.io weather service&lt;/a&gt; on their site.  The I2C connection to the display may be too slow for smooth animation, but there are plenty of pins on both the Node MCU and Huzzah modules to switch to a faster SPI connection which &lt;a href=&#34;https://www.youtube.com/watch?v=SvOX-xs9v8M&#34;&gt;can update fast enough for smooth animation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It would also be nice to figure out a way to make installing the PHP script unnecessary or easy for a beginner, to make the project easier to replicate.  If the ESP8266 can’t handle parsing data from the weather API directly, maybe the tutorial could explain how to install the PHP script for someone that&amp;rsquo;s not familiar with running PHP scripts.&lt;/p&gt;

&lt;p&gt;The Adafruit version requires more parts and tools as their Huzzah WiFi module doesn&amp;rsquo;t include a USB connection for programming or powering the module.  I have to imagine they are working on a more full-featured product to compete with the NodeMCU and similar ESP8266 modules, and it would be nice to see their tutorial updated to use the new module if one becomes available.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Smart Stickers Product Preview</title>
      <link>http://www.connected-displays.com/post/smart-stickers-product-preview/</link>
      <pubDate>Thu, 10 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.connected-displays.com/post/smart-stickers-product-preview/</guid>
      <description>

&lt;p&gt;There’s an &lt;a href=&#34;https://www.indiegogo.com/projects/smart-sticker-customizable-real-time-display#/story&#34;&gt;Indiegogo campaign&lt;/a&gt; running for Smart Stickers - low cost bluetooth connected E-ink displays.  The product looks interesting, and I want this to become a real product, but I have some serious doubts about the campaign.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.indiegogo.com/projects/smart-sticker-customizable-real-time-display#/story&#34;&gt;&lt;img src=&#34;overview.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;tech:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Tech&lt;/h2&gt;

&lt;h3 id=&#34;e-ink-display:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;E-Ink Display&lt;/h3&gt;

&lt;p&gt;Smart Stickers use a 2.7” Pervasive Displays E-Ink screen.  These screens are capable of displaying black and white only, and are 264x176 pixels.  The screens only consume power when refreshing, and so are well suited to displaying information that refreshes infrequently when powered by a battery.  The screens are not nearly as fast to update as the LCD displays on a smartphone, and to avoid ghosting, must go through a sequence of intermediate images when refreshing, drawing the inverse of the previous image and the inverse of the new image before drawing the new image.  This can take some time and looks unpleasant.  In the example screens shown in the video with the current time, the screen must be refreshed every minute to update the time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;epaperrefresh.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;source: &lt;a href=&#34;http://repaper.org/doc/cog_driving.html#data-structure&#34;&gt;repaper.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This isn’t displayed in the Smart Stickers video, but there is an &lt;a href=&#34;https://youtu.be/c_j6QWyRJLg?t=1m53s&#34;&gt;example on Youtube&lt;/a&gt; of an Embedded Artists development board refreshing a 2.7” Pervasive Displays E-Ink screen.&lt;/p&gt;

&lt;p&gt;The Pervasive E-Ink displays are &lt;a href=&#34;https://www.adafruit.com/products/1346&#34;&gt;readily available for prototyping&lt;/a&gt;, with example code for Arduino and other platforms.&lt;/p&gt;

&lt;h3 id=&#34;bluetooth-low-energy:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Bluetooth Low Energy&lt;/h3&gt;

&lt;p&gt;Smart Stickers use a Bluetooth Low Energy (BLE) module for connecting to a smartphone to configure the display and update information.  The outline in the mechanical drawing looks like a &lt;a href=&#34;http://www.aliexpress.com/wholesale?catId=0&amp;amp;SearchText=hm-11&#34;&gt;HM-11 module&lt;/a&gt;.  BLE is a good choice for being able to use minimal power but still be accessible for immediate updates as new information arrives.  It has some drawbacks however, as it requires a smartphone to connect to the internet.  You couldn’t set the display up for your family, for example, and expect it to update while you and your phone were away from home.  BLE has a low data rate, &lt;a href=&#34;https://atmosphere.anaren.com/wiki/Data_rates_using_BLE&#34;&gt;roughly 10kB/s max&lt;/a&gt;, but this shouldn’t be a problem as a 264x176 mono image is less than 6kB, so the phone could push an entire image in less than a second.&lt;/p&gt;

&lt;h4 id=&#34;why-not-wifi:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Why not WiFi?&lt;/h4&gt;

&lt;p&gt;Smart Stickers are similar in concept to &lt;a href=&#34;https://www.kickstarter.com/projects/914874115/displio-wifi-display-that-tracks-whats-important-t&#34;&gt;DISPLIO&lt;/a&gt;, a WiFi connected E-ink display that was also crowdfunded this year.  There are a couple reasons why Smart Stickers may have picked BLE over WiFi.  The first is power consumption.  BLE can stay in a low power mode where it is listening for new messages from the smartphone but using very little power, where WiFi uses a lot more power when it is active.  Smart Stickers can get updates in close to real time, while with DISPLIO, you have to choose between frequent updates or long battery life, and there is no option for always listening on battery power.  A second reason might be cost: BLE chipsets are generally cheaper than WiFi, though with chips like the ESP8266, that is starting to change.  A third reason might be reduced complexity: with BLE there’s no need to program WiFi credentials into the display or troubleshoot network issues, and the firmware only needs to communicate with the smartphone app, not a server in the cloud.&lt;/p&gt;

&lt;h3 id=&#34;software:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Software&lt;/h3&gt;

&lt;p&gt;There is no mention of a microcontroller on the Smart Stickers description except for the CC2541 BLE chipset.  The CC2541 has an 8051 core with 128/256kB flash and 8kB RAM, so it seems capable of updating the panel in addition to handling BLE communication.  The design will need more memory to store the image as the E-Ink display is write only, and requires an entire row to be refreshed even when updating a single pixel.  I didn’t see any external memory in the published Smart Stickers CAD drawings, but they may not be up to date.&lt;/p&gt;

&lt;p&gt;In the simplest design, most of the intelligence can stay in the smartphone app, and the display firmware can be limited to updating the display with a new image sent by the smartphone.  This makes sense for a lot of content, as weather or social media notifications can’t be updated without data from the smartphone.  Other content - like the current time - could update on its own without wasting battery by communicating over BLE.  The display could also store fonts and icons so an image could be built up without sending bitmap data over BLE with every update.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;app.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The Smart Stickers App lets you customize your screen, dividing the screen up into 15 segments, with widgets taking up one or more segments.  This seems like a smart way to allow for flexibility while still keeping the design simple.&lt;/p&gt;

&lt;h3 id=&#34;concerns:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Concerns&lt;/h3&gt;

&lt;p&gt;While I like the design of this product, it’s good to be a bit skeptical when backing projects on crowdfunding sites, as there is no guarantee that the company will be able to deliver the product.&lt;/p&gt;

&lt;p&gt;I saw a couple red flags immediately when looking at this campaign.  First, it is a “&lt;a href=&#34;https://support.indiegogo.com/hc/en-us/articles/205138007-Choose-Your-Funding-Type-Can-I-Keep-My-Money-&#34;&gt;flexible funding&lt;/a&gt;” campaign, which means that even if Smart Stickers doesn’t reach it’s $75,000 goal, they keep all the funds anyway.  This could put them in a dangerous position where they have a commitment to build product for their customers, but not enough money raised to actually do it.  Too many crowdfunding campaigns have ended with the project creator losing money on the campaign and still unable to deliver products to their backers.&lt;/p&gt;

&lt;p&gt;Second, the price is really low - especially at the early bird levels - but $30 including shipping seems too low for a product like this.  The E-Ink display itself is $15 &lt;a href=&#34;%5Bhttp://www.digikey.com/product-detail/en/E1271CS021/E1271CS021-ND/5046793%5D&#34;&gt;from Digi-Key&lt;/a&gt; in 100 piece quantities, though they may be able to get a lower price with volume or by sourcing direct from Pervasive Displays.  Even so, adding up the costs of display, BLE module, battery, custom circuit board, enclosure, assembly, and worldwide shipping, then considering the up-front costs for tooling needed for an enclosure, and margin to make some profit - this seems too cheap.&lt;/p&gt;

&lt;p&gt;Next, the schedule doesn’t seem realistic.  They’re supposed to be sourcing parts in December, but won’t know the number of units to build until the campaign ends at the end of December.  It seems unlikely that they will be able to do a production run in January with such a short time to source parts.  Shipping isn’t until February, but February is also Chinese New Year, which puts a major delay into production and shipping schedules &lt;a href=&#34;http://www.ewmfg.com/chinese-new-year/&#34;&gt;before and after the holiday&lt;/a&gt;.  There are FCC and CE logos on the packaging, but no accounting for the time it takes to test, and possibly modify the design if tests fail.&lt;/p&gt;

&lt;p&gt;Finally, there are no live shots of the prototypes updating the display.  The same image is on the display in almost all the real life photos, with one exception.  It would be easy to use a development board to draw a mockup image to an E-Ink panel, put the panel in an enclosure, without actually building a functioning prototype.  It would be even easier to print out a photo of the screen content and put that in an enclosure.  The video and photos don’t give me confidence that there is a working prototype of the product.&lt;/p&gt;

&lt;p&gt;Many of the renderings on the campaign page don’t show the pixelation that E-Ink displays will have - especially in the circles and fonts with fine lines.  With the display limited to black and white, it’s not capable of anti-aliasing and the edges of fine lines will look jagged.  Here’s &lt;a href=&#34;https://developer.mbed.org/users/dreschpe/code/EaEpaper/&#34;&gt;this example&lt;/a&gt; of what fonts and circles look like on the actual E-Ink display to the Smart Stickers rendering:
&lt;img src=&#34;epaperdrawing.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;smartstickerrender.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;summary:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;I like the concept of this product and I hope to see it get to market.  I see too many red flags with this campaign to recommend backing it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.e-ink-info.com/smart-stickers-want-raise-75000-make-30-e-ink-devices&#34;&gt;via E-Ink Info&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MoodLight Product Preview</title>
      <link>http://www.connected-displays.com/post/moodlight-product-preview/</link>
      <pubDate>Fri, 04 Dec 2015 12:22:39 -0500</pubDate>
      
      <guid>http://www.connected-displays.com/post/moodlight-product-preview/</guid>
      <description>

&lt;p&gt;Connor Nishijima created an online service that monitors Twitter for people expressing their emotions, and is in the middle of a &lt;a href=&#34;https://www.kickstarter.com/projects/connornishijima/moodlight-a-wifi-enabled-window-to-the-worlds-emot&#34;&gt;Kickstarter campaign&lt;/a&gt; to show that data on a WiFi connected display.&lt;/p&gt;

&lt;iframe width=&#34;640&#34; height=&#34;480&#34; src=&#34;https://www.kickstarter.com/projects/connornishijima/moodlight-a-wifi-enabled-window-to-the-worlds-emot/widget/video.html&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34;&gt; &lt;/iframe&gt;

&lt;p&gt;The twitter data is analyzed by a server, and you can see it working on the &lt;a href=&#34;http://moodlighting.co/stats/&#34;&gt;MoodLighting Stats page&lt;/a&gt;.  The display polls the server for new data every second, and lights up nine LEDs to display the current state of emotions.  The light appears to fade between different shades as emotions gradually change, but also can flash to get your attention if a sudden change in emotions is detected.&lt;/p&gt;

&lt;h2 id=&#34;hardware:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Hardware&lt;/h2&gt;

&lt;p&gt;The project uses the popular ESP8266 module for connecting to WiFi, but most of the code is running on an ATmega328P, the same chip that&amp;rsquo;s on an Arduino Uno.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;hardware.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The electronics are enclosed in a laser cut birch veneer enclosure, with options to buy the display fully assembled, or as a cheaper unassembled version that you can glue together yourself.  The LEDs are diffused through a sheet of what looks like frosted acrylic, that creates a blending effect for the LEDs, which is more pleasant to look at than bare LEDs and is well suited for a display showing ambient information.&lt;/p&gt;

&lt;h2 id=&#34;software:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Software&lt;/h2&gt;

&lt;p&gt;Most of the intelligence is in the cloud, keeping the firmware simple so it doesn&amp;rsquo;t need to be changed if Twitter updates its API, or MoodLighting improves its mood data analysis.&lt;/p&gt;

&lt;h2 id=&#34;likes:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Likes&lt;/h2&gt;

&lt;p&gt;I like that the project leverages code on an online server to do the heavy lifting of analyzing data, which simplifies the firmware running on the display and reduces data usage.&lt;/p&gt;

&lt;p&gt;The diffused LEDs are good choice for representing data without being distracting, but the display also implements a flashing mode to grab attention when needed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;isoview.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The project is open source - the firmware, PCB design, and mechanical details for the enclosure are posted on GitHub as of the start of the campaign - though it&amp;rsquo;s unclear what license the code and drawings are shared with.&lt;/p&gt;

&lt;p&gt;Connor has thought about alternate uses for the display beyond displaying mood data.  You can program it yourself with user-friendly &lt;a href=&#34;http://ifttt.com&#34;&gt;IFTTT&lt;/a&gt;, or you can bypass the cloud completely by using local UDP messages.&lt;/p&gt;

&lt;h2 id=&#34;concerns:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Concerns&lt;/h2&gt;

&lt;p&gt;The project&amp;rsquo;s funding goals are very low, and the product doesn&amp;rsquo;t seem heavily marked up, which means there isn&amp;rsquo;t a lot of money left over after fulfilling the Kickstarter rewards.  One of the stretch goals that has already been met is to create a cross-platform app for the display, which could be a significant expense.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s not clear if there is a plan to be able to update the firmware either remotely or over USB, even after I looked at the firmware for both the main microcontroller and the wifi module.  It appears that other than the advanced use of sending local packets over UDP, data for the display need to come through the &amp;ldquo;www.moodlighting.co&amp;rdquo; server, so the functionality of the device depends on the server being maintained.&lt;/p&gt;

&lt;h2 id=&#34;suggestions-for-the-next-version:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Suggestions for the Next Version&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;d like to see an option to customize the feeds that are monitored for mood, to show only twitter accounts you&amp;rsquo;re following for example.  If that&amp;rsquo;s too complicated, maybe there could be an option to show only certain groups on twitter, e.g. by region, language, or type of twitter user.&lt;/p&gt;

&lt;p&gt;For users that just want an ambient information display, and not notifications, an option to turn off the flashing notification would be nice.&lt;/p&gt;

&lt;p&gt;The LED fading looks pretty good in the video, but I&amp;rsquo;d love to see what it could look like if it were using &lt;a href=&#34;http://fastled.io&#34;&gt;FastLED&lt;/a&gt; and some of the code shared in &lt;a href=&#34;http://fastled.io/+&#34;&gt;their community&lt;/a&gt; instead of the basic Adafruit NeoPixel library.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://hackaday.com/2015/10/12/internet-connected-box-displays-emotion-basement-dwellers-still-unaffected&#34;&gt;via Hackaday&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lametric Time - Initial Review</title>
      <link>http://www.connected-displays.com/post/lametric-time-initial-review/</link>
      <pubDate>Sun, 15 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.connected-displays.com/post/lametric-time-initial-review/</guid>
      <description>

&lt;p&gt;I was excited to learn about the LaMetric Time when it launched on Kickstarter in July 2014.  I was lucky enough to be an early backer at the $119 price for a plug-in LaMetric (no battery), and I just opened it up and spent about an hour playing with it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;timebanner.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;LaMetric Time was interesting to me because of its pixelated LED display and potential for customization, displaying any data that&amp;rsquo;s available from the web.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s my initial thoughts, though I will be writing about this display later as I customize it for my needs and start using it regularly.&lt;/p&gt;

&lt;h2 id=&#34;hardware:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Hardware&lt;/h2&gt;

&lt;p&gt;The Time has attractive industrial design.  The display has a nice matte black textured finish that resists fingerprints, but does seem to collect dust, and rounded corners on the vertical edges.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;LaMetric%20-%20big%20buttons.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The front of the display hides the LEDs perfectly when off.  You can&amp;rsquo;t tell that it&amp;rsquo;s a display at all.  When on, the LEDs are separated into square pixels with thin borders between each pixel.  The diffusion within each square is pretty good, though you can see it&amp;rsquo;s brighter at the center than the edges instead of ideally even brightness across the square.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s not a lot you can do with 8x8 graphics, though it&amp;rsquo;s pretty easy to tell what the icons represent.  The animations are very simple, and I haven&amp;rsquo;t yet dug in to figure out if that&amp;rsquo;s a limitation of the number of frames, color palette available, a stylistic choice, or just because it&amp;rsquo;s harder to make a more complicated animation.  It&amp;rsquo;s unfortunate that only the left 8x8 side on the display is RGB, and the rest is only capable of display of displaying white/gray.  The music visualization in the Radio app is a little boring with just white bars, and scrolling text color is limited to white so you can&amp;rsquo;t use message color as additional information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;unspecified.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The display is not designed for wall mounting.  Because the USB power jack is on the back of the display and the USB cable included plugs straight in, the display can&amp;rsquo;t sit up against a wall.  It needs about 1.5&amp;rdquo; (3.8cm) clearance for the USB cable - about the same thickness of the display.  The back seems to be the only logical place to put the USB jack to support scrolling a message across multiple displays, but including a USB cable with a right-angle plug would have kept a lower profile when the display is plugged in.&lt;/p&gt;

&lt;p&gt;The three buttons on the top (left, right, action) are easy to press and have nice tactile feedback.  The volume and power buttons are on the sides, and it takes extra effort to keep the display from sliding sideways on the table when pressing these buttons.  Either I need to hold the display from the other side with a second hand, or press down on the top of the display without accidentally pressing a top button to change the volume.  Maybe the displays that come with a battery are heavy enough to resist sliding when pushing buttons from the side.&lt;/p&gt;

&lt;h2 id=&#34;usage:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;I tried the built-in Clock, Weather, Stopwatch, and Timer apps, and they work well.  You can set the alarm or the initial timer value right from the display or through the app.  More detailed customizations like choosing an icon to display next to the clock, or choosing an alarm sound require the app.&lt;/p&gt;

&lt;p&gt;I loaded the Message Board app which lets you set up to five messages.  Each message has an optional icon and text that stays put the screen if it fits, or scrolls if it&amp;rsquo;s too long.  There&amp;rsquo;s no customization for message cycle time or scrolling text speed, and I felt like both were on the fast side.  With the display placed about a foot to the right of my monitor while typing this review, I felt the movement was distracting me.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t back the Kickstarter campaign to get a Bluetooth speaker, but that feature was added as a bonus.  The sound quality is decent, but it seems to be missing some features that even my generic Bluetooth speakers have.  When connecting from my iPhone, I need to go into Bluetooth Settings on the phone to add the speaker each time it&amp;rsquo;s enabled, while my other speakers are automatically discovered by the phone when powered on or bluetooth is enabled.  I can&amp;rsquo;t change the volume using the music app on my phone, and have to use the awkward hardware volume buttons, or go into the settings menu of the LaMetric app.  Hopefully these issues can be fixed in a future software update.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;LaMetric%20-%20Bluetooth%20speaker.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The graphic equalizer that shows when audio is playing through bluetooth or online radio has a poor update rate that I don&amp;rsquo;t think tracks well to the music.&lt;/p&gt;

&lt;p&gt;Minor nit-picks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There’s no built in night/sleep mode.  If I want to significantly dim the display at night without fully powering off the display, I need to install a third party app from the LaMetric app store built to overcome this shortcoming.&lt;/li&gt;
&lt;li&gt;The sounds on the display are a bit basic or feel outdated.  The sound when changing volume sounds like a keypress from a touch tone phone, and isn&amp;rsquo;t very pleasant.  The default alarm sounds are very tinny, though the speakers are capable of playing high quality music.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;customization:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Customization&lt;/h2&gt;

&lt;p&gt;Though people just started receiving displays, there are more than a few third-party apps in the LaMetric App Store.  It appears you do need some web development experience to make an app.  The display must poll your server or listen to push notifications for updated information and doesn&amp;rsquo;t have the ability to parse data directly from a third-party API.  IFTTT support for customizing the display without coding wasn’t available while writing this review, though it is supposed to be coming.&lt;/p&gt;

&lt;p&gt;User-created apps are limited to displaying indictors, or triggering a server when a button is pressed.  There&amp;rsquo;s no support for creating an app with more complex behavior.  I was hoping to see a &lt;a href=&#34;http://tomato-timer.com&#34;&gt;Pomodoro Timer app&lt;/a&gt;, but that is unlikely unless LaMetric creates this app themselves or adds support for more complex user-created apps.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;DraggedImage.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Icon creation is limited to point and click in the web application or phone app.  There are no import capabilities, so creating or editing an icon - especially an animated icon - is tedious.&lt;/p&gt;

&lt;h2 id=&#34;documentation-and-forums:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Documentation and Forums&lt;/h2&gt;

&lt;p&gt;The documentation in the form of a PDF user guide, FAQ built into the app, and knowledge base seems thorough.&lt;/p&gt;

&lt;p&gt;There is a user forum with mixed participation by LaMetric - some threads have responses, and some threads appear ignored though LaMetric says they are reading everything.&lt;/p&gt;

&lt;h3 id=&#34;issues:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Issues&lt;/h3&gt;

&lt;p&gt;Though the display requires use of the cloud servers, interacting with the display &lt;a href=&#34;https://lametric.freshdesk.com/support/discussions/topics/6000018237&#34;&gt;requires being on the same LAN&lt;/a&gt;, so you can&amp;rsquo;t update the display remotely.  If you want to use the display as a remote-controlled message board, that use case isn&amp;rsquo;t supported and the developers haven&amp;rsquo;t commented on the issue yet.&lt;/p&gt;

&lt;h2 id=&#34;concerns:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Concerns&lt;/h2&gt;

&lt;p&gt;As with a lot of internet-enabled products, the functionality of the device depends on servers in the cloud and an app to be maintained, and there is no option for directly driving the display bypassing the cloud.  If/when support for the display ends, the device becomes a paperweight.&lt;/p&gt;

&lt;h2 id=&#34;conclusions:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Overall I like the display, and it seems like a has a lot of potential, though the software feels like a beta release.  This is what you might expect with initial deliveries from a Kickstarter campaign, but that is not how it is marketed for new customers paying full price.&lt;/p&gt;

&lt;p&gt;The retail price is quite high: $179 for the unit I&amp;rsquo;m reviewing and $199 for a display with battery, plus $25 shipping.  I&amp;rsquo;m not sure how many people think the stereo Bluetooth speaker and online radio feature is useful, but I would rather have seen a cheaper price without those features.&lt;/p&gt;

&lt;p&gt;Subscribe to get more articles about this and similar displays over the coming months.  I plan to write more about customizing the LaMetric Time after IFTTT support is added, and might do a teardown to see what&amp;rsquo;s inside the hardware.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raincheck Product Preview</title>
      <link>http://www.connected-displays.com/post/raincheck-product-preview/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.connected-displays.com/post/raincheck-product-preview/</guid>
      <description>

&lt;p&gt;Raincheck is an umbrella stand that knows if it&amp;rsquo;s going to rain.  It has a WiFi connected LED display to show you the chance of precipitation in the next eight hours, built into a beautiful hand-crafted umbrella stand.&lt;/p&gt;

&lt;iframe width=&#34;640&#34; height=&#34;480&#34; src=&#34;https://www.kickstarter.com/projects/1314258106/raincheck/widget/video.html&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34;&gt; &lt;/iframe&gt;

&lt;p&gt;I had just finished my first &lt;a href=&#34;https://www.particle.io/prototype#photon&#34;&gt;Particle Photon&lt;/a&gt; project - an indicator to tell if it’s going to rain in the next four hours - when I saw Raincheck in my twitter feed.  I thought it was interesting as Raincheck integrates simple electronics in a well-designed hand-crafted enclosure.&lt;/p&gt;

&lt;h2 id=&#34;hardware:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Hardware&lt;/h2&gt;

&lt;p&gt;Raincheck was initially prototyped with a Raspberry Pi, but is now going to be built with the Particle Photon.  It looks like the LEDs are a strip of WS2812 LEDs (aka NeoPixels).  To drive LEDs continuously it will need to be plugged into the wall, and photos in the press kit show what looks like a 5VDC power supply.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;DSCF0539.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Sometimes projects like these are powered through USB.  The max current draw of eight WS2812s is 480mA, so it&amp;rsquo;s going to be just above the 500mA limit for a standard USB port once you add in the Photon&amp;rsquo;s current draw, though the LEDs can and probably are going to be dimmed.&lt;/p&gt;

&lt;h3 id=&#34;enclosure:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Enclosure&lt;/h3&gt;

&lt;p&gt;The main part of Raincheck is the stand itself, designed and hand-crafted by Nick Jonas.  I have no experience with wood working, but it looks like a lot of thought has gone into the design from the appearance, to protecting the inside from the water, and weighting the stand so it stays upright.  The electronics need to be both at the bottom of the stand to connect power, and the side of the stand where the LEDs are.  A model of the prototype shows a channel in the wood for the LED strip and wires, and a photo shows how there was space left in the bottom to mount the rest of the electronics and a panel-mount power jack.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;comparison.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Compare the unfinished look of the breadboard prototype to the LEDs installed in the stand.  The stand does a great job of hiding the messy electronics behind a beautiful object.  The stand isn&amp;rsquo;t cheap - $299 retail price with a $50 discount for early Kickstarter backers - and likely most of the money is going toward the stand.  The cost of the electronics are probably under $50 buying in low volumes from a US shop like Adafruit, and there&amp;rsquo;s labor involved in assembling them.  I have no idea what the materials cost, and how much one would normally pay for a hand-crafted stand like this - there&amp;rsquo;s nothing to easily compare with online.&lt;/p&gt;

&lt;p&gt;Ideally, the lights in the stand shouldn&amp;rsquo;t draw your attention until you need the information and it should be available at a glance.  Without seeing the stand in person it&amp;rsquo;s hard to judge, but I have some concerns about the lights being distracting.  The LEDs blink blue or white - very intense colors - when there is rain or snow in the forecast.  It doesn&amp;rsquo;t appear that the LEDs are diffused, and they may be quite bright if looked at straight on.  This is a minor concern as they are low to the ground, but they also might cast light against a nearby wall, lighting up the room at night even if they are dim.&lt;/p&gt;

&lt;h3 id=&#34;hiding-the-photon-in-an-enclosure:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Hiding the Photon in an Enclosure&lt;/h3&gt;

&lt;p&gt;To meet the Particle &lt;a href=&#34;https://docs.particle.io/guide/how-to-build-a-product/pcb-design/#hardware-design-requirements&#34;&gt;Hardware Design Requirements&lt;/a&gt;, the device must expose the RGB LED and a button to enter setup mode to the user.  On a finished product like this, exposing part of the Photon to make the button user-accessible is risky, especially on the bottom which end up damp (not from the stand leaking water from the umbrella, but from wet rain boots sitting next to the stand).  This hand-crafted product won&amp;rsquo;t have the volume to justify a completely custom PCB using a Particle P0 or P1 module and will likely be using the Photon directly.  The Photon has pads on the back to bring out the signals for an external Setup button and RGB LED, so it&amp;rsquo;s possible to protect the Photon by hiding it deeper in an enclosure, while still giving the user access to setup the Photon.&lt;/p&gt;

&lt;h2 id=&#34;software:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Software&lt;/h2&gt;

&lt;p&gt;Raincheck connects to WiFi, and is configured through an iOS or Android App.  It pulls weather data from the &lt;a href=&#34;https://developer.forecast.io/&#34;&gt;Forecast.io API&lt;/a&gt; every fifteen minutes.&lt;/p&gt;

&lt;h3 id=&#34;api:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;API&lt;/h3&gt;

&lt;p&gt;Why is the forecast updated only every fifteen minutes?  (In my Photon rain project I updated every two minutes.)  Probably because once you get past the Forecast.io’s free 1,000 API requests per day, each request costs money: $0.0001 ea.  That&amp;rsquo;s about $3.50 per year per stand, while updating every 2 minutes for example would cost over $26 per year.  There&amp;rsquo;s no subscription fee for the stand, so these costs have to be built into the price.&lt;/p&gt;

&lt;h3 id=&#34;app:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;App&lt;/h3&gt;

&lt;p&gt;The stand must be configured through a smartphone app.  This seems reasonable as smartphones are so common now, and Particle makes it easy to configure the Photon through an app.  For custom products, Particle has mobile SDKs and example apps, that are supposed to make it easier for developers.  This product needs at least a simple custom app for setting up WiFi credentials and sending your location to the Photon.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Raincheck looks like a well designed product, though at the price point seems only accessible to someone who is willing to pay the premium for a hand-crafted product.  This is reasonable as Nick is hand making these on the side, and the goal of the project seems more about creating a high-quality product and releasing it to the world than to manufacture a ton of products and create a full-time business.  I wish Nick luck with the Kickstarter and hope to see future product designs combining hand-crafted objects with glanceable information.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>